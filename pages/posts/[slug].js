import { ApolloClient, InMemoryCache } from '@apollo/client';
import Head from 'next/head'
import { Container, Row, Col } from 'react-bootstrap';
import { GET_POSTS_SLUG, GET_POSTBY_SLUG } from '../../graphql/queries';

const client = new ApolloClient({
  uri: process.env.GQL_URL,
  cache: new InMemoryCache()
})

export default function Home({ post }) {
  return (
    <>
      <Head>
        <title>{post?.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container className='post-container my-5'>
        <Row className='justify-content-center'>
          <Col lg="8">
            <h1>{post?.title}</h1>
            <div className='post-content' dangerouslySetInnerHTML={{ __html: post?.content }} />
          </Col>
        </Row>
      </Container>
    </>
  )
}


export async function getStaticPaths() {

  const { data } = await client.query({
    query: GET_POSTS_SLUG
  })

  const paths = data.posts.edges.map(post => {
    return {
      params: {
        slug: post.node.slug || ""
      }
    }
  });

  return {
    paths,
    fallback: false,
  }
}

export async function getStaticProps({ params }) {

  const { data } = await client.query({
    query: GET_POSTBY_SLUG,
    variables: { slugUrl: params.slug }
  });

  return {
    props: {
      post: data.postBy
    }
  }
}
